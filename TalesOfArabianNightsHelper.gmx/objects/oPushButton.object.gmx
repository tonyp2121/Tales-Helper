<!--This Document is generated by GameMaker, if you edit it by hand then you do so at your own risk!-->
<object>
  <spriteName>sPushButton</spriteName>
  <solid>0</solid>
  <visible>-1</visible>
  <depth>0</depth>
  <persistent>0</persistent>
  <parentName>&lt;undefined&gt;</parentName>
  <maskName>&lt;undefined&gt;</maskName>
  <events>
    <event eventtype="0" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>game = oGameData.id
var main
if (instance_exists(oNewEncounterButton)){
    main = oMain.id
    beginningBool = false
    encounter = oNewEncounterButton.id
    opacityLocation = oNewEncounterButton.id
    }
else if (instance_exists(oBeginning)){
    beginningBool = true
    beginning = oBeginning.id
    opacityLocation = oBeginning.id
    }
text = ""
function = -1

</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="3" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>// function

switch (function)
{
    case 0: text = "0"
            if mouse_check_button_released(mb_left) &amp;&amp; position_meeting(mouse_x, mouse_y, id){
            }
            break
    case 1: text = "1"
            if mouse_check_button_released(mb_left) &amp;&amp; position_meeting(mouse_x, mouse_y, id){
            }
            break
    case 2: text = "2"
            if mouse_check_button_released(mb_left) &amp;&amp; position_meeting(mouse_x, mouse_y, id){
            if (beginningBool){
            beginning.input = "2"
            beginning.entered = true
            }
            else{
            
            }
            }
            break
    case 3: text = "3"
            if mouse_check_button_released(mb_left) &amp;&amp; position_meeting(mouse_x, mouse_y, id){
            if (beginningBool){
            beginning.input = "3"
            beginning.entered = true
            }
            else{
            
            }
            }
            break
    case 4: text = "4"
            if mouse_check_button_released(mb_left) &amp;&amp; position_meeting(mouse_x, mouse_y, id){
            if (beginningBool){
            beginning.input = "4"
            beginning.entered = true
            }
            else{
            
            }
            }
            break 
    case 5: text = "5"
            if mouse_check_button_released(mb_left) &amp;&amp; position_meeting(mouse_x, mouse_y, id){
            if (beginningBool){
            beginning.input = "5"
            beginning.entered = true
            }
            else{
            
            }
            }
            break
    case 6: text = "6"
            if mouse_check_button_released(mb_left) &amp;&amp; position_meeting(mouse_x, mouse_y, id){
            if (beginningBool){
            beginning.input = "6"
            beginning.entered = true
            }
            else{
            
            }
            }
            break
    case 7: text = "7"
            break
    case 8: text = "8"
            break
    case 9: text = "9"
            break
    case 10:text = "enter"
            break
    case 11:text = ""
            break
}

</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="8" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>// add opacity thing
if(function = 11){
image_index = 1}
else{
image_index = 0
}
draw_set_alpha(opacityLocation.opacity)
image_alpha = opacityLocation.opacity
draw_self()
draw_text_transformed(x,y, text, 1, 1, 0)
</string>
          </argument>
        </arguments>
      </action>
    </event>
  </events>
  <PhysicsObject>0</PhysicsObject>
  <PhysicsObjectSensor>0</PhysicsObjectSensor>
  <PhysicsObjectShape>0</PhysicsObjectShape>
  <PhysicsObjectDensity>0.5</PhysicsObjectDensity>
  <PhysicsObjectRestitution>0.100000001490116</PhysicsObjectRestitution>
  <PhysicsObjectGroup>0</PhysicsObjectGroup>
  <PhysicsObjectLinearDamping>0.100000001490116</PhysicsObjectLinearDamping>
  <PhysicsObjectAngularDamping>0.100000001490116</PhysicsObjectAngularDamping>
  <PhysicsObjectFriction>0.200000002980232</PhysicsObjectFriction>
  <PhysicsObjectAwake>-1</PhysicsObjectAwake>
  <PhysicsObjectKinematic>0</PhysicsObjectKinematic>
  <PhysicsShapePoints/>
</object>
