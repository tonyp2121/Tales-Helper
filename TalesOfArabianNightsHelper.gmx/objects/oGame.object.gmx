<!--This Document is generated by GameMaker, if you edit it by hand then you do so at your own risk!-->
<object>
  <spriteName>&lt;undefined&gt;</spriteName>
  <solid>0</solid>
  <visible>-1</visible>
  <depth>0</depth>
  <persistent>0</persistent>
  <parentName>&lt;undefined&gt;</parentName>
  <maskName>&lt;undefined&gt;</maskName>
  <events>
    <event eventtype="0" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>window_set_fullscreen(true)

enum State {normal, aboutToLeave}

currentState = State.normal
currentStateChanged = false

opacity = 0
opacityChangingSpeed = 2/room_speed


//-------------------------------
// Things I need to focus on
//-------------------------------
//   Keeping track of each players speacialties -- done
//   Keeping track of each players Wealth/Destiny/Story and the benefits those give -- almost done
//   Keep track of any and all player statuses and display what the status do on each  -- halfway there woah oh livin on a prayer
//       players turn
//   Have some sort of animation for switching characters maybe a card flipping animation -- holy shit probably not a fade in/out is easier
//   When you click on a card it goes to the center of the screen and everything else gets -- dunno why I wanted this this doesnt seem to do anything
//       darkened away 
//   Maybe have a basic rulebook -- nahhhh lmao  
//   Have the ability to enter text (for player names maybe just so its easier to tell how -- nahhh lmao use colors for this
//       many players there are and also to know what entry your supposed to read)
//   Have a look up table where you enter the thing under the card, the time of day selected -- yeah still do this
//       then calculate where in the book the entry should be.
//   Make a good looking text entering box -- fuck that
//   Have a dice roll button (Actually might not be necessary, must look through rules and -- not necessary people can roll their own dice
//       see what its used for, have a dice roll animation or at least a phase out and then
//       a question mark appears on it instead)
//------------------------------------
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="3" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>if(currentState == State.normal){
if keyboard_check_pressed(vk_escape)
{
    currentState = State.aboutToLeave
    currentStateChanged = true
}
}
else if(currentState == State.aboutToLeave){
    if keyboard_check_pressed(vk_escape)
        {
            game_end()
        }
    if keyboard_check_pressed(vk_enter){
        currentState = State.normal
        currentStateChanged = true
    }
}

</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="8" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>image_alpha = opacity
depth = -11000000
draw_set_alpha(opacity)
if(currentState == State.aboutToLeave&amp;&amp; currentStateChanged){
    opacity += opacityChangingSpeed
        if opacity &gt; 1{ currentStateChanged = false; opacity = 1}
    
}
if(currentState == State.normal &amp;&amp; currentStateChanged){
    opacity -= opacityChangingSpeed
        if opacity &lt; 0{ currentStateChanged = false; opacity = 0}   
}
if(opacity &gt; 0){
draw_sprite_ext(sFadeInBackground,0,room_width/2,room_height/2,1,1,0,0,opacity) 
draw_sprite_ext(sFadeInBackground,0,room_width/2,room_height/2,1,1,0,0,opacity) 
draw_sprite_ext(sFadeInBackground,0,room_width/2,room_height/2,1,1,0,0,opacity) 
draw_text_transformed(room_width/2, room_height*7/16, "Press escape again to quit", 1, 1, 0)
draw_text_transformed(room_width/2, room_height*9/16, "Press enter to return to the game.", 1, 1, 0)
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
  </events>
  <PhysicsObject>0</PhysicsObject>
  <PhysicsObjectSensor>0</PhysicsObjectSensor>
  <PhysicsObjectShape>0</PhysicsObjectShape>
  <PhysicsObjectDensity>0.5</PhysicsObjectDensity>
  <PhysicsObjectRestitution>0.100000001490116</PhysicsObjectRestitution>
  <PhysicsObjectGroup>0</PhysicsObjectGroup>
  <PhysicsObjectLinearDamping>0.100000001490116</PhysicsObjectLinearDamping>
  <PhysicsObjectAngularDamping>0.100000001490116</PhysicsObjectAngularDamping>
  <PhysicsObjectFriction>0.200000002980232</PhysicsObjectFriction>
  <PhysicsObjectAwake>-1</PhysicsObjectAwake>
  <PhysicsObjectKinematic>0</PhysicsObjectKinematic>
  <PhysicsShapePoints/>
</object>
