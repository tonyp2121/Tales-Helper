<!--This Document is generated by GameMaker, if you edit it by hand then you do so at your own risk!-->
<object>
  <spriteName>sTokens</spriteName>
  <solid>0</solid>
  <visible>-1</visible>
  <depth>0</depth>
  <persistent>0</persistent>
  <parentName>&lt;undefined&gt;</parentName>
  <maskName>&lt;undefined&gt;</maskName>
  <events>
    <event eventtype="0" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>game = oGameData.id
main = oMain.id
function = 0
givenDepth = -100
opacityLocation = 0
currentPlayer = game.currentPlayer
opacity = 1
image_alpha = 0
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="3" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>image_index = function
image_alpha = opacityLocation.opacity
depth = givenDepth

if (opacity == 0 and currentPlayer =! game.currentPlayer){instance_destroy()}
if (function == 0 &amp;&amp; !main.unclickable) {
    // if clicked on it should change main value of some name to make a picker thing
   
    if mouse_check_button_released(mb_left) &amp;&amp; position_meeting(mouse_x, mouse_y, id){
    main.unclickable = true;
    main.picker = true;
    buttonInitialX = room_width/7
    buttonInitialY = room_height/7
    buttonSpawnX = buttonInitialX
    buttonSpawnY = buttonInitialY
    buttonIncrementX = room_width/7
    buttonIncrementY = room_height/4
    for (i = 0; i &lt; 18; i+= 1){
        token = instance_create(buttonSpawnX, buttonSpawnY, oToken)
        token.function = i + 1
        token.givenDepth = -300
        token.opacityLocation = self.id
        buttonSpawnX += buttonIncrementX
        if ( i % 6 == 5){
        buttonSpawnX = buttonInitialX
        buttonSpawnY += buttonIncrementY
        }
    }
    }
}
if(function != 0  &amp;&amp; main.picker){
    // when picker is up let you select the current token
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="8" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>draw_self()

if(main.picker &amp;&amp; function == 0){
    draw_sprite_ext(sFadeInBackground, 0, room_width/2, room_height/2, 1, 1, 0, -1, 1) 
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
  </events>
  <PhysicsObject>0</PhysicsObject>
  <PhysicsObjectSensor>0</PhysicsObjectSensor>
  <PhysicsObjectShape>0</PhysicsObjectShape>
  <PhysicsObjectDensity>0.5</PhysicsObjectDensity>
  <PhysicsObjectRestitution>0.100000001490116</PhysicsObjectRestitution>
  <PhysicsObjectGroup>0</PhysicsObjectGroup>
  <PhysicsObjectLinearDamping>0.100000001490116</PhysicsObjectLinearDamping>
  <PhysicsObjectAngularDamping>0.100000001490116</PhysicsObjectAngularDamping>
  <PhysicsObjectFriction>0.200000002980232</PhysicsObjectFriction>
  <PhysicsObjectAwake>-1</PhysicsObjectAwake>
  <PhysicsObjectKinematic>0</PhysicsObjectKinematic>
  <PhysicsShapePoints/>
</object>
