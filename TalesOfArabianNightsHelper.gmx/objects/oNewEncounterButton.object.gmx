<!--This Document is generated by GameMaker, if you edit it by hand then you do so at your own risk!-->
<object>
  <spriteName>sNextPlayer</spriteName>
  <solid>-1</solid>
  <visible>-1</visible>
  <depth>0</depth>
  <persistent>0</persistent>
  <parentName>&lt;undefined&gt;</parentName>
  <maskName>&lt;undefined&gt;</maskName>
  <events>
    <event eventtype="0" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>game = oGameData.id
main = oMain.id

image_alpha = 0
depth = 10000
opacity = 0
input = ""
number = 0
encounterEntered = false
randomize()
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="3" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>

if(!main.unclickable){
    if mouse_check_button_released(mb_left) &amp;&amp; position_meeting(mouse_x, mouse_y, id){
        main.newEncounter = true
        main.unclickable = true
        pushButtonX = room_width * 3 / 10
        pushButtonXInitial = pushButtonX
        pushButtonY = room_height * 5.7 / 10
        pushButtonXInc = room_width/13
        pushButtonYInc = room_height/7
        count = 0

    for(i = 0; i &lt; 5; i+=1){
        pushButton = instance_create(pushButtonX, pushButtonY, oPushButton)
        pushButton.function = i
        pushButtonX += pushButtonXInc
    }
    pushButton = instance_create(pushButtonX, pushButtonY, oPushButton)
    pushButton.function = 10
    pushButtonX = pushButtonXInitial
    pushButtonY += pushButtonYInc
    for(i = 5; i &lt; 10; i+=1){
        pushButton = instance_create(pushButtonX, pushButtonY, oPushButton)
        pushButton.function = i
        pushButtonX += pushButtonXInc
    }
    pushButton = instance_create(pushButtonX, pushButtonY, oPushButton)
    pushButton.function = 11
}
}

if(main.newEncounter){
    depth = -1000
    if(encounterEntered &amp;&amp; !keyboard_check_pressed(vk_enter) &amp;&amp; keyboard_check_pressed(vk_anykey) &amp;&amp; keyboard_lastkey &gt;=65 and keyboard_lastkey&lt;=90 or keyboard_lastkey&gt;=97 and keyboard_lastkey&lt;=122 or keyboard_lastkey&gt;=48 and keyboard_lastkey&lt;=57 or keyboard_lastkey==192 or keyboard_lastkey==32){
        encounterEntered = false
    }
    input = getInputNumbersOnly(input)
    if(keyboard_check_pressed(vk_enter) &amp;&amp; input = ""){
        encounterEntered = false
        main.newEncounter = false
        main.unclickable = false
    }
    if(keyboard_check_pressed(vk_enter) &amp;&amp; !encounterEntered){
        number = real(input)
        number -= 1
        input = ""
        if(number &gt;= 0 &amp;&amp;number &lt;= 120 &amp;&amp; number != 88 &amp;&amp; number != 95 &amp;&amp; number != 102 &amp;&amp; number != 103 &amp;&amp; number != 110 &amp;&amp; number != 111){
            dieRoll = random_range(0,11)
            encounterEntered = true
        }
    }
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="8" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>image_alpha = main.opacity
draw_self()
draw_text_transformed(x,y, "New Encounter", .75, .75, 0)

if(main.newEncounter){
    // if new encounter is being pressed we want to bring in the sprite background that goes over everything
    if(opacity &lt; 1) {
        opacity += 1/room_speed
        if (opacity &gt;= 1){opacity = 1} // this looks dumb but its so i dont assign it every frame I only need to do it once
    }
    
    
    
}
else{
    if(opacity &gt; 0){
        opacity -= 1/room_speed
        if (opacity &lt;= 0){opacity = 0
                          depth = 0
                          while (instance_exists(oPushButton)){instance_destroy(instance_nearest(x,y,oPushButton))}
                          }
    }
}
drawTextX = room_width/2
drawTextY = room_height * 2 / 10
deawTextYInc = 1/8 * room_height
draw_sprite_ext(sFadeInBackground,0,room_width/2,room_height/2,1,1,0,0,opacity) 
draw_sprite_ext(sFadeInBackground,0,room_width/2,room_height/2,1,1,0,0,opacity/2) 
if(encounterEntered){
        if(number &lt; 83) draw_text_colour(drawTextX, drawTextY, "You've encountered a " + game.encounterMatrixName[number, dieRoll],-1,-1,-1,-1, opacity)
        else draw_text_colour(drawTextX, drawTextY, "You've encountered a " + game.encounterMatrixName[number, dieRoll] + " type of creature",-1,-1,-1,-1, opacity)
    draw_text_colour(drawTextX, drawTextY + deawTextYInc, "Matrix " + game.encounterMatrix[number, dieRoll],-1,-1,-1,-1, opacity)
                
    }
else{
    draw_text_colour(drawTextX, drawTextY, input, -1,-1,-1,-1, opacity)
}




</string>
          </argument>
        </arguments>
      </action>
    </event>
  </events>
  <PhysicsObject>0</PhysicsObject>
  <PhysicsObjectSensor>0</PhysicsObjectSensor>
  <PhysicsObjectShape>0</PhysicsObjectShape>
  <PhysicsObjectDensity>0.5</PhysicsObjectDensity>
  <PhysicsObjectRestitution>0.100000001490116</PhysicsObjectRestitution>
  <PhysicsObjectGroup>0</PhysicsObjectGroup>
  <PhysicsObjectLinearDamping>0.100000001490116</PhysicsObjectLinearDamping>
  <PhysicsObjectAngularDamping>0.100000001490116</PhysicsObjectAngularDamping>
  <PhysicsObjectFriction>0.200000002980232</PhysicsObjectFriction>
  <PhysicsObjectAwake>-1</PhysicsObjectAwake>
  <PhysicsObjectKinematic>0</PhysicsObjectKinematic>
  <PhysicsShapePoints/>
</object>
