<!--This Document is generated by GameMaker, if you edit it by hand then you do so at your own risk!-->
<object>
  <spriteName>&lt;undefined&gt;</spriteName>
  <solid>0</solid>
  <visible>-1</visible>
  <depth>0</depth>
  <persistent>0</persistent>
  <parentName>&lt;undefined&gt;</parentName>
  <maskName>&lt;undefined&gt;</maskName>
  <events>
    <event eventtype="0" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>// Begin code
game = oGameData.id
setNames()
opacity = 0
depth = 0

// code for initial condition on all players

for (i = 0; i &lt; game.numOfPlayers; i+=1){
    game.destinyCount[i] = 0
    game.storyCount[i] = 0
    game.wealth[i] = 2
    for (j = 0; j &lt; 18; j+=1){
        game.token[i, j] = false
    }
    for (j = 0; j &lt; 28; j+=1){
        game.status[i, j] = false
    }
    
}


// for initial fade in

start = true
game.currentPlayer = 0

// token code

tokenSpawn = false
tokenInitialX = room_width*.85/3
tokenInitialY = room_height*17/18
var tokenID
picker = false

// status code

statusSpawn = false
statusInitialX = room_width*2.67/3
statusInitialY = room_height*1.3/18
var statusID
statusPicker = false



// next player button code

nextPlayerX = room_width*2.67/3 
nextPlayerY = room_height*1.3/18 + 5 * room_height/8
nextPlayer = false

instance_create(nextPlayerX, nextPlayerY, oNextPlayerButton)

// new encounter button code

newEncounterX = room_width*2.67/3 
newEncounterY = room_height*1.3/18 + 4 * room_height/8
newEncounter = false
opacityEncounter = 0

instance_create(newEncounterX, newEncounterY, oNewEncounterButton)

// general dont do something if its unclickable

unclickable = false

// status text code

instance_create(x,y,oStatusText)

// add/subtract button spawns

spawnAddSubtractButtons()

</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="3" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>if (unclickable){exit}
// should probably keep this at the bottom since the 
// "exit" command dont want to skip anything too important
if (!tokenSpawn){
    tokenSpawn = true
    placeTokenX = tokenInitialX
    placeTokenY = tokenInitialY
    placeTokenYDiff = room_height/9
    tokenCount = 0
    while(instance_exists(oToken)){
        for(i = 19; i &lt; instance_number(oToken); i+=1){placeTokenX += room_width/16
                                                tokenCount += 1;
                                                if(tokenCount &gt; 5) {tokenCount = 0; placeTokenX = tokenInitialX; placeTokenY -= placeTokenYDiff;}}
        ID = instance_nearest(placeTokenX,placeTokenY,oToken)
        if(ID.opacity &gt; 0){tokenSpawn = false 
         exit}
        instance_destroy(ID)
    }
    while(instance_exists(oExitButton)){
        ID = instance_nearest(placeTokenX,placeTokenY,oExitButton)
        if(ID.function == "token"){instance_destroy(ID)}
        else{break}
    }
    placeTokenX = tokenInitialX
    placeTokenY = tokenInitialY
    tokenCount = 0
    for(i = 0; i &lt; 18; i+=1){
        if(game.token[game.currentPlayer, i]){
            tokenID = instance_create(placeTokenX, placeTokenY, oToken)
            tokenID.opacityLocation = self.id
            tokenID.givenDepth = -150
            tokenCount+=1
            tokenID.function = i + 1
            exitID = instance_create(placeTokenX + 50, placeTokenY - 50, oExitButton)
            exitID.function = "token" 
            exitID.owner = tokenID
            placeTokenX += room_width/16
            if(tokenCount &gt; 5) {tokenCount = 0; placeTokenX = tokenInitialX; placeTokenY -= placeTokenYDiff;}
        }
    }
    
    tokenID = instance_create(placeTokenX, placeTokenY, oToken)
    tokenID.givenDepth = -160
    tokenID.opacityLocation = self.id
    tokenID.function = 0
}
// status
if (!statusSpawn){
    statusCount = 0
    statusSpawn = true
    placeStatusX = statusInitialX
    placeStatusY = statusInitialY
    incrementStatusY = room_height/8
    incrementStatusX = room_width/5.3
    while(instance_exists(oStatus)){
        for(i = 29; i &lt; instance_number(oStatus); i+=1){statusCount+= 1
                                                        placeStatusY +=incrementStatusY
                                                        if (statusCount &gt; 4){
                                                            break
                                                            placeStatusY = statusInitialY
                                                            placeStatusX -= incrementStatusX}}
        ID = instance_nearest(placeStatusX,placeStatusY,oStatus)
        if(ID.opacity &gt; 0){statusSpawn = false 
         exit}
        instance_destroy(ID)
    }
    while(instance_exists(oExitButton)){
        ID = instance_nearest(placeStatusX,placeStatusY,oExitButton)
        if(ID.function == "status"){instance_destroy(ID)}
        else{break}
    }
    placeStatusX = statusInitialX
    placeStatusY = statusInitialY
    statusCount = 0
    for(i = 0; i &lt; 28; i+=1){
        if(game.status[game.currentPlayer, i]){
            statusID = instance_create(placeStatusX, placeStatusY, oStatus)
            statusID.opacityLocation = self.id
            statusID.givenDepth = 0
            statusID.statusType = i + 1
            exitID = instance_create(placeStatusX + 170, placeStatusY - 52, oExitButton)
            exitID.function = "status" 
            exitID.owner = statusID
            placeStatusY += incrementStatusY
            statusCount += 1
            if (statusCount &gt; 4){break;
            placeStatusY = statusInitialY
            placeStatusX -= incrementStatusX
            }
        }
    }
    
    if(statusCount &lt; 4){
    statusID = instance_create(placeStatusX, placeStatusY, oStatus)
   // statusID.givenDepth = -160
    statusID.opacityLocation = self.id
    statusID.function = 0}
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="8" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>
image_alpha = opacity
opacityChangingSpeed = 1/2/room_speed

if(start){
opacity += opacityChangingSpeed
if opacity &gt; 1{start = false; opacity = 1}
}

else if(nextPlayer){
opacity -= opacityChangingSpeed
if (opacity &lt; 0) {
    if (game.currentPlayer = game.numOfPlayers - 1)
        game.currentPlayer = 0
    else
        game.currentPlayer += 1
    start = true
    nextPlayer = false
    unclickable = false
    tokenSpawn = false
    statusSpawn = false
    }
}

xNamePos = room_width/64
yNamePos = room_height - room_height/64

xDestinyPos = room_width - room_width/6
yDestinyPos = room_height - room_height/10

xStoryPos = room_width - room_width/14
yStoryPos = room_height - room_height/10

xWealthPos = room_width - room_width/3.5
yWealthPos = room_height - room_height/7.1
yWealthPosDiff = room_height/16
xWealthScale = .75
yWealthScale = xWealthScale
xWealthMovementPosDiff = room_height/36
landColor = $b79a86
seaColor = $739cdd

draw_set_alpha(opacity)

image_alpha = opacity
draw_set_font(fMainText)
draw_set_halign(fa_left)
draw_set_valign(fa_bottom)

draw_text(xNamePos, yNamePos, game.playerName[game.currentPlayer])
draw_sprite(sNameUnderline, game.colorPicked[game.currentPlayer], xNamePos, yNamePos);

draw_text(xNamePos, yNamePos, game.playerName[game.currentPlayer])
draw_sprite(sNameUnderline, game.colorPicked[game.currentPlayer], xNamePos, yNamePos)

draw_set_halign(fa_center)
draw_set_valign(fa_middle)

draw_sprite(sDestinyCount, 0, xDestinyPos, yDestinyPos)
draw_text_transformed(xDestinyPos, yDestinyPos - room_height/35, "Destiny", .4, .4, 0)
draw_text_transformed(xDestinyPos, yDestinyPos, game.destinyCount[game.currentPlayer], .8, .8, 0)

draw_sprite(sStoryCount, 0, xStoryPos, yStoryPos)
draw_text_transformed(xStoryPos, yStoryPos - room_height/35, "Story", .4, .4, 0)
draw_text_transformed(xStoryPos, yStoryPos, game.storyCount[game.currentPlayer], .8, .8, 0)

draw_text_transformed(xWealthPos, yWealthPos, "Wealth", xWealthScale, yWealthScale, 0)
draw_sprite_ext(sNameUnderline, 0, xWealthPos - room_width/31.5, yWealthPos + room_height/40, .3, .7, 0, c_white, opacity)

if(game.wealth[game.currentPlayer] = 0){
    draw_text_transformed(xWealthPos, yWealthPos + yWealthPosDiff, "Beggar", xWealthScale, yWealthScale, 0)
    draw_set_color(bgr2rgb(landColor))
    draw_text_transformed(xWealthPos - xWealthMovementPosDiff, yWealthPos + 1.7 * yWealthPosDiff, "3", xWealthScale, yWealthScale, 0)
    draw_set_color(bgr2rgb(seaColor))
    draw_text_transformed(xWealthPos + xWealthMovementPosDiff, yWealthPos + 1.7 * yWealthPosDiff, "2", xWealthScale, yWealthScale, 0)
    }
else if(game.wealth[game.currentPlayer] = 1){
    draw_text_transformed(xWealthPos, yWealthPos + yWealthPosDiff, "Penniless", xWealthScale, yWealthScale, 0)
    draw_set_color(bgr2rgb(landColor))
    draw_text_transformed(xWealthPos - xWealthMovementPosDiff, yWealthPos + 1.7 * yWealthPosDiff, "3", xWealthScale, yWealthScale, 0)
    draw_set_color(bgr2rgb(seaColor))
    draw_text_transformed(xWealthPos + xWealthMovementPosDiff, yWealthPos + 1.7 * yWealthPosDiff, "2", xWealthScale, yWealthScale, 0)
    }
else if(game.wealth[game.currentPlayer] = 2){
    draw_text_transformed(xWealthPos, yWealthPos + yWealthPosDiff, "Poor", xWealthScale, yWealthScale, 0)
    draw_set_color(bgr2rgb(landColor))
    draw_text_transformed(xWealthPos - xWealthMovementPosDiff, yWealthPos + 1.7 * yWealthPosDiff, "3", xWealthScale, yWealthScale, 0)
    draw_set_color(bgr2rgb(seaColor))
    draw_text_transformed(xWealthPos + xWealthMovementPosDiff, yWealthPos + 1.7 * yWealthPosDiff, "2", xWealthScale, yWealthScale, 0)
    }
else if(game.wealth[game.currentPlayer] = 3){
    draw_text_transformed(xWealthPos, yWealthPos + yWealthPosDiff, "Respectable", xWealthScale, yWealthScale, 0)
    draw_set_color(bgr2rgb(landColor))
    draw_text_transformed(xWealthPos - xWealthMovementPosDiff, yWealthPos + 1.7 * yWealthPosDiff, "4", xWealthScale, yWealthScale, 0)
    draw_set_color(bgr2rgb(seaColor))
    draw_text_transformed(xWealthPos + xWealthMovementPosDiff, yWealthPos + 1.7 * yWealthPosDiff, "4", xWealthScale, yWealthScale, 0)
    }
else if(game.wealth[game.currentPlayer] = 4){
    draw_text_transformed(xWealthPos, yWealthPos + yWealthPosDiff, "Rich", xWealthScale, yWealthScale, 0)
    draw_set_color(bgr2rgb(landColor))
    draw_text_transformed(xWealthPos - xWealthMovementPosDiff, yWealthPos + 1.7 * yWealthPosDiff, "4", xWealthScale, yWealthScale, 0)
    draw_set_color(bgr2rgb(seaColor))
    draw_text_transformed(xWealthPos + xWealthMovementPosDiff, yWealthPos + 1.7 * yWealthPosDiff, "4", xWealthScale, yWealthScale, 0)
    }
else if(game.wealth[game.currentPlayer] = 5){
    draw_text_transformed(xWealthPos, yWealthPos + yWealthPosDiff, "Princely", xWealthScale, yWealthScale, 0)
    draw_set_color(bgr2rgb(landColor))
    draw_text_transformed(xWealthPos - xWealthMovementPosDiff, yWealthPos + 1.7 * yWealthPosDiff, "3", xWealthScale, yWealthScale, 0)
    draw_set_color(bgr2rgb(seaColor))
    draw_text_transformed(xWealthPos + xWealthMovementPosDiff, yWealthPos + 1.7 * yWealthPosDiff, "5", xWealthScale, yWealthScale, 0)
    }
else if(game.wealth[game.currentPlayer] = 6){
    draw_text_transformed(xWealthPos, yWealthPos + yWealthPosDiff, "Fabulous", xWealthScale, yWealthScale, 0)
    draw_set_color(bgr2rgb(landColor))
    draw_text_transformed(xWealthPos - xWealthMovementPosDiff, yWealthPos + 1.7 * yWealthPosDiff, "2", xWealthScale, yWealthScale, 0)
    draw_set_color(bgr2rgb(seaColor))
    draw_text_transformed(xWealthPos + xWealthMovementPosDiff, yWealthPos + 1.7 * yWealthPosDiff, "6", xWealthScale, yWealthScale, 0)
    }
draw_set_color(c_white)


</string>
          </argument>
        </arguments>
      </action>
    </event>
  </events>
  <PhysicsObject>0</PhysicsObject>
  <PhysicsObjectSensor>0</PhysicsObjectSensor>
  <PhysicsObjectShape>0</PhysicsObjectShape>
  <PhysicsObjectDensity>0.5</PhysicsObjectDensity>
  <PhysicsObjectRestitution>0.100000001490116</PhysicsObjectRestitution>
  <PhysicsObjectGroup>0</PhysicsObjectGroup>
  <PhysicsObjectLinearDamping>0.100000001490116</PhysicsObjectLinearDamping>
  <PhysicsObjectAngularDamping>0.100000001490116</PhysicsObjectAngularDamping>
  <PhysicsObjectFriction>0.200000002980232</PhysicsObjectFriction>
  <PhysicsObjectAwake>-1</PhysicsObjectAwake>
  <PhysicsObjectKinematic>0</PhysicsObjectKinematic>
  <PhysicsShapePoints/>
</object>
